// vite.config.ts
import { defineConfig } from "file:///D:/%E9%A1%B9%E7%9B%AE/dinert-and-design/node_modules/vite/dist/node/index.js";
import react from "file:///D:/%E9%A1%B9%E7%9B%AE/dinert-and-design/node_modules/@vitejs/plugin-react/dist/index.mjs";
import path from "path";
import dts from "file:///D:/%E9%A1%B9%E7%9B%AE/dinert-and-design/node_modules/vite-plugin-dts/dist/index.mjs";
var __vite_injected_original_dirname = "D:\\\u9879\u76EE\\dinert-and-design";
var vite_config_default = defineConfig({
  build: {
    // 打包文件目录
    outDir: "es",
    sourcemap: true,
    // 是否打包map文件
    // 压缩
    // minify: false,
    rollupOptions: {
      // 忽略打包vue文件
      external: ["react", "antd", "react-dom", "react/jsx-runtime"],
      input: ["./packages/index.ts"],
      output: [
        {
          format: "es",
          // 打包后文件名
          entryFileNames: "[name].mjs",
          // 让打包目录和我们目录对应
          preserveModules: true,
          exports: "named",
          // 配置打包根目录
          dir: "es"
        },
        {
          // 打包格式
          format: "cjs",
          //   //打包后文件名
          entryFileNames: "[name].js",
          //   preserveModules: true,
          exports: "named",
          //   //配置打包根目录
          dir: "lib"
        },
        {
          format: "umd",
          exports: "named",
          dir: "dist",
          name: "dinert-ant-design",
          globals: {
            "react": "react",
            "antd": "antd",
            "react-dom": "ReactDOM",
            "react/jsx-runtime": "react/jsx-runtime"
          }
        }
      ]
    },
    lib: {
      entry: "./index.ts"
    }
  },
  plugins: [
    react(),
    dts({
      entryRoot: "./packages",
      outDir: ["./es/src", "./lib/src"],
      // 指定使用的tsconfig.json为我们整个项目根目录下,如果不配置,你也可以在components下新建tsconfig.json
      tsconfigPath: "./tsconfig.json"
    })
  ],
  resolve: {
    alias: {
      "@packages": `${path.resolve(__vite_injected_original_dirname, "./packages")}`
    },
    extensions: [".js", ".json", ".jsx", ".mjs", ".ts", ".tsx"]
  },
  server: {
    port: 8956
  }
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxcdTk4NzlcdTc2RUVcXFxcZGluZXJ0LWFuZC1kZXNpZ25cIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkQ6XFxcXFx1OTg3OVx1NzZFRVxcXFxkaW5lcnQtYW5kLWRlc2lnblxcXFx2aXRlLmNvbmZpZy50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vRDovJUU5JUExJUI5JUU3JTlCJUFFL2RpbmVydC1hbmQtZGVzaWduL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcbmltcG9ydCByZWFjdCBmcm9tICdAdml0ZWpzL3BsdWdpbi1yZWFjdCdcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnXG5pbXBvcnQgZHRzIGZyb20gJ3ZpdGUtcGx1Z2luLWR0cydcblxuLy8gaHR0cHM6Ly92aXRlanMuZGV2L2NvbmZpZy9cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XG4gICAgYnVpbGQ6IHtcbiAgICAgICAgLy8gXHU2MjUzXHU1MzA1XHU2NTg3XHU0RUY2XHU3NkVFXHU1RjU1XG4gICAgICAgIG91dERpcjogJ2VzJyxcblxuICAgICAgICBzb3VyY2VtYXA6IHRydWUsIC8vIFx1NjYyRlx1NTQyNlx1NjI1M1x1NTMwNW1hcFx1NjU4N1x1NEVGNlxuICAgICAgICAvLyBcdTUzOEJcdTdGMjlcbiAgICAgICAgLy8gbWluaWZ5OiBmYWxzZSxcbiAgICAgICAgcm9sbHVwT3B0aW9uczoge1xuICAgICAgICAgICAgLy8gXHU1RkZEXHU3NTY1XHU2MjUzXHU1MzA1dnVlXHU2NTg3XHU0RUY2XG4gICAgICAgICAgICBleHRlcm5hbDogWydyZWFjdCcsICdhbnRkJywgJ3JlYWN0LWRvbScsICdyZWFjdC9qc3gtcnVudGltZSddLFxuICAgICAgICAgICAgaW5wdXQ6IFsnLi9wYWNrYWdlcy9pbmRleC50cyddLFxuXG4gICAgICAgICAgICBvdXRwdXQ6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogJ2VzJyxcbiAgICAgICAgICAgICAgICAgICAgLy8gXHU2MjUzXHU1MzA1XHU1NDBFXHU2NTg3XHU0RUY2XHU1NDBEXG4gICAgICAgICAgICAgICAgICAgIGVudHJ5RmlsZU5hbWVzOiAnW25hbWVdLm1qcycsXG5cbiAgICAgICAgICAgICAgICAgICAgLy8gXHU4QkE5XHU2MjUzXHU1MzA1XHU3NkVFXHU1RjU1XHU1NDhDXHU2MjExXHU0RUVDXHU3NkVFXHU1RjU1XHU1QkY5XHU1RTk0XG4gICAgICAgICAgICAgICAgICAgIHByZXNlcnZlTW9kdWxlczogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgZXhwb3J0czogJ25hbWVkJyxcbiAgICAgICAgICAgICAgICAgICAgLy8gXHU5MTREXHU3RjZFXHU2MjUzXHU1MzA1XHU2ODM5XHU3NkVFXHU1RjU1XG4gICAgICAgICAgICAgICAgICAgIGRpcjogJ2VzJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gXHU2MjUzXHU1MzA1XHU2ODNDXHU1RjBGXG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogJ2NqcycsXG4gICAgICAgICAgICAgICAgICAgIC8vICAgLy9cdTYyNTNcdTUzMDVcdTU0MEVcdTY1ODdcdTRFRjZcdTU0MERcbiAgICAgICAgICAgICAgICAgICAgZW50cnlGaWxlTmFtZXM6ICdbbmFtZV0uanMnLFxuXG4gICAgICAgICAgICAgICAgICAgIC8vICAgcHJlc2VydmVNb2R1bGVzOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBleHBvcnRzOiAnbmFtZWQnLFxuICAgICAgICAgICAgICAgICAgICAvLyAgIC8vXHU5MTREXHU3RjZFXHU2MjUzXHU1MzA1XHU2ODM5XHU3NkVFXHU1RjU1XG4gICAgICAgICAgICAgICAgICAgIGRpcjogJ2xpYicsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGZvcm1hdDogJ3VtZCcsXG4gICAgICAgICAgICAgICAgICAgIGV4cG9ydHM6ICduYW1lZCcsXG4gICAgICAgICAgICAgICAgICAgIGRpcjogJ2Rpc3QnLFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnZGluZXJ0LWFudC1kZXNpZ24nLFxuICAgICAgICAgICAgICAgICAgICBnbG9iYWxzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAncmVhY3QnOiAncmVhY3QnLFxuICAgICAgICAgICAgICAgICAgICAgICAgJ2FudGQnOiAnYW50ZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAncmVhY3QtZG9tJzogJ1JlYWN0RE9NJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICdyZWFjdC9qc3gtcnVudGltZSc6ICdyZWFjdC9qc3gtcnVudGltZSdcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICBsaWI6IHtcbiAgICAgICAgICAgIGVudHJ5OiAnLi9pbmRleC50cycsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBwbHVnaW5zOiBbXG4gICAgICAgIHJlYWN0KCksXG4gICAgICAgIGR0cyh7XG4gICAgICAgICAgICBlbnRyeVJvb3Q6ICcuL3BhY2thZ2VzJyxcblxuICAgICAgICAgICAgb3V0RGlyOiBbJy4vZXMvc3JjJywgJy4vbGliL3NyYyddLFxuXG4gICAgICAgICAgICAvLyBcdTYzMDdcdTVCOUFcdTRGN0ZcdTc1MjhcdTc2ODR0c2NvbmZpZy5qc29uXHU0RTNBXHU2MjExXHU0RUVDXHU2NTc0XHU0RTJBXHU5ODc5XHU3NkVFXHU2ODM5XHU3NkVFXHU1RjU1XHU0RTBCLFx1NTk4Mlx1Njc5Q1x1NEUwRFx1OTE0RFx1N0Y2RSxcdTRGNjBcdTRFNUZcdTUzRUZcdTRFRTVcdTU3Mjhjb21wb25lbnRzXHU0RTBCXHU2NUIwXHU1RUZBdHNjb25maWcuanNvblxuICAgICAgICAgICAgdHNjb25maWdQYXRoOiAnLi90c2NvbmZpZy5qc29uJyxcbiAgICAgICAgfSksXG4gICAgXSxcbiAgICByZXNvbHZlOiB7XG4gICAgICAgIGFsaWFzOiB7XG4gICAgICAgICAgICAnQHBhY2thZ2VzJzogYCR7cGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4vcGFja2FnZXMnKX1gLFxuICAgICAgICB9LFxuICAgICAgICBleHRlbnNpb25zOiBbJy5qcycsICcuanNvbicsICcuanN4JywgJy5tanMnLCAnLnRzJywgJy50c3gnLF1cbiAgICB9LFxuICAgIHNlcnZlcjoge1xuICAgICAgICBwb3J0OiA4OTU2LFxuICAgIH0sXG5cbn0pXG4iXSwKICAibWFwcGluZ3MiOiAiO0FBQTZRLFNBQVMsb0JBQW9CO0FBQzFTLE9BQU8sV0FBVztBQUNsQixPQUFPLFVBQVU7QUFDakIsT0FBTyxTQUFTO0FBSGhCLElBQU0sbUNBQW1DO0FBTXpDLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQ3hCLE9BQU87QUFBQTtBQUFBLElBRUgsUUFBUTtBQUFBLElBRVIsV0FBVztBQUFBO0FBQUE7QUFBQTtBQUFBLElBR1gsZUFBZTtBQUFBO0FBQUEsTUFFWCxVQUFVLENBQUMsU0FBUyxRQUFRLGFBQWEsbUJBQW1CO0FBQUEsTUFDNUQsT0FBTyxDQUFDLHFCQUFxQjtBQUFBLE1BRTdCLFFBQVE7QUFBQSxRQUNKO0FBQUEsVUFDSSxRQUFRO0FBQUE7QUFBQSxVQUVSLGdCQUFnQjtBQUFBO0FBQUEsVUFHaEIsaUJBQWlCO0FBQUEsVUFDakIsU0FBUztBQUFBO0FBQUEsVUFFVCxLQUFLO0FBQUEsUUFDVDtBQUFBLFFBQ0E7QUFBQTtBQUFBLFVBRUksUUFBUTtBQUFBO0FBQUEsVUFFUixnQkFBZ0I7QUFBQTtBQUFBLFVBR2hCLFNBQVM7QUFBQTtBQUFBLFVBRVQsS0FBSztBQUFBLFFBQ1Q7QUFBQSxRQUNBO0FBQUEsVUFDSSxRQUFRO0FBQUEsVUFDUixTQUFTO0FBQUEsVUFDVCxLQUFLO0FBQUEsVUFDTCxNQUFNO0FBQUEsVUFDTixTQUFTO0FBQUEsWUFDTCxTQUFTO0FBQUEsWUFDVCxRQUFRO0FBQUEsWUFDUixhQUFhO0FBQUEsWUFDYixxQkFBcUI7QUFBQSxVQUN6QjtBQUFBLFFBQ0o7QUFBQSxNQUNKO0FBQUEsSUFDSjtBQUFBLElBQ0EsS0FBSztBQUFBLE1BQ0QsT0FBTztBQUFBLElBQ1g7QUFBQSxFQUNKO0FBQUEsRUFDQSxTQUFTO0FBQUEsSUFDTCxNQUFNO0FBQUEsSUFDTixJQUFJO0FBQUEsTUFDQSxXQUFXO0FBQUEsTUFFWCxRQUFRLENBQUMsWUFBWSxXQUFXO0FBQUE7QUFBQSxNQUdoQyxjQUFjO0FBQUEsSUFDbEIsQ0FBQztBQUFBLEVBQ0w7QUFBQSxFQUNBLFNBQVM7QUFBQSxJQUNMLE9BQU87QUFBQSxNQUNILGFBQWEsR0FBRyxLQUFLLFFBQVEsa0NBQVcsWUFBWSxDQUFDO0FBQUEsSUFDekQ7QUFBQSxJQUNBLFlBQVksQ0FBQyxPQUFPLFNBQVMsUUFBUSxRQUFRLE9BQU8sTUFBTztBQUFBLEVBQy9EO0FBQUEsRUFDQSxRQUFRO0FBQUEsSUFDSixNQUFNO0FBQUEsRUFDVjtBQUVKLENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
